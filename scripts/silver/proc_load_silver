CREATE OR ALTER PROCEDURE silver.load_silver AS
BEGIN

	truncate table silver.erp_px_cat_g1v2;
	insert into silver.erp_px_cat_g1v2
	(ID,
	cat,
	subcat,
	maintenance)
	select*
	from bronze.erp_px_cat_g1v2

	----------------------------------------------------------------------------------

	truncate table silver.erp_loc_a101
	insert into silver.erp_loc_a101
	(cid,
	cntry)

	select
	replace(cid, '-', '') cid,
	CASE
		when trim(upper(cntry)) = 'DE'
		then 'Germany'
		when trim(upper(cntry)) = 'USA' or trim(upper(cntry)) = 'US'
		then 'United States'
		when trim(upper(cntry)) is null or trim(upper(cntry)) = ''
		then 'n/a'
		else cntry
	END cntry
	from bronze.erp_loc_a101

----------------------------------------------------------------------------------

	truncate table silver.erp_cust_az12
	insert into silver.erp_cust_az12
	(cid, bdate, gen)
	select
	CASE
		when cid like 'NAS%'
		then right(cid,len(cid)-3)
		else cid
	END cid,
	CASE
		when bdate > GETDATE()
		then null
		when bdate < '1924-01-01'
		then null
		else bdate
	END bdate,
	CASE
		when trim(gen) = 'M'
		then 'Male'
		when trim(gen) = 'F'
		then 'Female'
		when trim(gen) is null or trim(gen) = ''
		then 'n/a'
		else trim(gen)
	END gender
	from bronze.erp_cust_az12

----------------------------------------------------------------------------------

	truncate table silver.crm_prd_info
	insert into silver.crm_prd_info(prd_id,
	cat_id,
	prd_key,
	prd_nm,
	prd_cost,
	prd_line,
	prd_start_dt,
	prd_end_dt)

	select
	prd_id,
	replace(substring(prd_key,1,5), '-', '_') as cat_id,
	substring(prd_key,7, len(prd_key)) as prd_key,
	prd_nm,
	coalesce(prd_cost, 0) prd_cost,
	CASE
		when upper(trim(prd_line)) = 'S'
		then 'Other Sales'
		when upper(trim(prd_line)) = 'M'
		then 'Mountain'
		when upper(trim(prd_line)) = 'R'
		then 'Road'
		when upper(trim(prd_line)) = 'T'
		then 'Touring'
		ELSE 'N/A'
	END prd_line,
	cast(prd_start_dt as date) prd_start_dt,
	cast(DATEADD(DAY, -1, LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt DESC))as date) AS prd_end_dt
	from bronze.crm_prd_info

----------------------------------------------------------------------------------

	truncate table silver.crm_sales_details
	insert into silver.crm_sales_details(
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	sls_order_dt,
	sls_ship_dt,
	sls_due_dt,
	sls_sales,
	sls_quantity,
	sls_price)

	SELECT
		sls_ord_num,
		sls_prd_key,
		sls_cust_id,
		coalesce(convert(date,cast(nullif(nullif(sls_ship_dt, 0),32154)as nvarchar(50)),112),'1900-01-01') AS sls_order_dt,
		COALESCE(
			TRY_CONVERT(date, CAST(NULLIF(NULLIF(sls_ship_dt, 0), 32154) AS char(8)), 112),
			'1900-01-01'
		) AS sls_ship_dt,
		COALESCE(
			TRY_CONVERT(date, CAST(NULLIF(NULLIF(sls_due_dt, 0), 32154) AS char(8)), 112),
			'1900-01-01'
		) AS sls_due_dt,
		CASE
			when sls_sales is null or sls_sales <= 0 or sls_sales != abs(sls_price)* sls_quantity
				then sls_quantity* abs(sls_price)
			else sls_sales
		END sls_sales,
		sls_quantity,
		CASE
			when sls_price is null or sls_price <=0 
				then sls_sales / nullif(sls_quantity,0)
			else sls_price
		END sls_price
	FROM bronze.crm_sales_details;

----------------------------------------------------------------------------------

	truncate table silver.crm_cust_info
	insert into silver.crm_cust_info ---to insert the newly cleansed data
	(cst_id,
	cst_key,
	cst_firstname,
	cst_lastname,
	cst_mater_status,
	cst_gndr,
	cst_create_date)

	select
	cst_id,
	cst_key,
	trim(cst_firstname) as cst_firstname,
	trim(cst_lastname)as cst_lastname,
	CASE 
		when trim(upper(cst_mater_status)) = 'M'
		Then 'Married'
		when upper(trim(cst_mater_status)) = 'S'
		then 'Single'
		else 'Unknown'
	END cst_mater_status,
	CASE
		when trim(upper(cst_gndr)) = 'M' 
		Then 'Male'
		when trim(upper(cst_gndr))= 'F'
		then 'Female'
		Else 'Unknown'
	END  cst_gndr,
	cst_create_date
	from 
	(
	select*,
	row_number() over(partition by cst_id order by cst_create_date desc) as flag
	from bronze.crm_cust_info
	where cst_id is not null
	)t
	where flag = 1;

END
